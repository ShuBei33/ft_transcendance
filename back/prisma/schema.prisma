// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// USER
model User {
	id Int @id @default(autoincrement())
	createdAt DateTime @default(now())
	updateAt DateTime @updatedAt

	login String @unique
  	pseudo String @unique
	avatar String? 
	twoFA Boolean @default(false)

	sent Invitation[] @relation("sender")
	received Invitation[] @relation("receiver")
	
	asUser1 Discussion[] @relation("userOne")
	asUser2 Discussion[] @relation("userTwo")

	rank Int
	achievements Achievement[]
	asPlayer1 Game[] @relation("first")
	asPlayer2 Game[] @relation("second")
}	

// FRIENDS 
model Invitation {

	sender User @relation("sender", fields:[senderId], references: [id])
	senderId Int
	receiver User @relation("receiver", fields:[receiverId], references: [id])
	receiverId Int
	
	inviteStatus StatusInv
	
	@@id([senderId, receiverId])
}

enum StatusInv {
	ACCEPTED
	PENDING
	REJECT
}

// GAME 
model Game {
	id Int @id @default(autoincrement())

	playerOne User @relation("first", fields:[playerOneId], references: [id])
	playerOneId Int
	playerTwo User @relation("second", fields:[playerTwoId], references: [id])
	playerTwoId Int
	score1 Int
	score2 Int

	// texture1 Type @unique
	// texture2 Type @unique
}

model Achievement {
	id Int @id @default(autoincrement())

	title String @unique
	desc String @unique
	icon String @unique

	users User[]
}

// CHAT - DISCUSSIONS
model Discussion {
	id Int @id @default(autoincrement())
	createdAt DateTime @default(now())

	user1 User @relation("userOne", fields:[userId1], references: [id])
	userId1 Int
	user2 User @relation("userTwo", fields:[userId2], references: [id])
	userId2 Int
}

model DiscussionMsg {
	id Int @id @default(autoincrement())
	createdAt DateTime @default(now())
	updateAt DateTime @updatedAt

	content String
	usrId Int
	discussionId Int
}

// CHAT - CHANNELS
model Channel {
	id Int @id @default(autoincrement())
	name String @unique
	createdAt DateTime @default(now())
	updateAt DateTime @updatedAt

  	private Boolean @default(false)
	protected Boolean @default(false)

	hash String? // hash?
}

model ChannelMsg {
	id Int @id @default(autoincrement())
	createdAt DateTime @default(now())

	content String
	usrId Int
	ChannelId Int
}

// CHAT - USER
model ChanUsr {
	id Int @id @default(autoincrement())
	userId Int @unique
	chanId Int @unique
	createdAt DateTime @default(now())
	updateAt DateTime @updatedAt

	role ChanUsrRole
	status ChanUsrStatus
	statusDuration DateTime
}

enum ChanUsrStatus {
	NORMAL
	MUTED
	BANNED
}

enum ChanUsrRole {
	NORMAL
	ADMIN
	OWNER
}
